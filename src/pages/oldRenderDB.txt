<div className="h-screen">
      <SidebarProvider 
        open={sidebarOpen} 
        onOpenChange={setSidebarOpen}
        className="h-full"
        style={{
          "--sidebar-width": "16rem",
          "--sidebar-width-mobile": "18rem",
        } as React.CSSProperties}
      >
        <div className="flex h-full">
          {/* Sidebar */}
          <Sidebar 
            variant="inset" 
            collapsible="icon"
            className="h-full border-r"
            side="left"
          >
            {/* Sidebar Header */}
            <SidebarHeader className="border-b p-0">
              <div className="flex items-center justify-between p-4">
                <div className="flex items-center gap-2">
                  <div className="flex h-8 w-8 items-center justify-center rounded-lg bg-primary text-white">
                    DF
                  </div>
                  <span className="text-lg font-semibold">DailyFix</span>
                </div>
              </div>
            </SidebarHeader>

            {/* Sidebar Content */}
            <SidebarContent className="p-2">
              {/* Main Navigation */}
              <SidebarGroup className="mb-4">
                <SidebarGroupLabel className="px-2 py-1.5 text-sm font-medium" asChild={false}>Main</SidebarGroupLabel>
                <SidebarGroupContent className="space-y-1">
                  <SidebarMenu className="space-y-1">
                    {mainNavItems.map((item) => (
                      <SidebarMenuItem key={item.title} className="px-0 py-0">
                        <SidebarMenuButton 
                          isActive={item.isActive}
                          tooltip={item.title}
                          onClick={() => handleNavigation(item.url)}
                          className="w-full flex justify-between items-center px-2 py-1.5 rounded-md hover:bg-accent"
                          variant="default"
                          size="default"
                        >
                          <item.icon className="size-4" />
                          <span>{item.title}</span>
                          {item.badge && (
                            <SidebarMenuBadge className="ml-auto bg-primary text-primary-foreground text-xs px-1.5 py-0.5 rounded-full">
                              {item.badge}
                            </SidebarMenuBadge>
                          )}
                        </SidebarMenuButton>
                      </SidebarMenuItem>
                    ))}
                  </SidebarMenu>
                </SidebarGroupContent>
              </SidebarGroup>

              {/* Secondary Navigation */}
              <SidebarGroup className="mb-4">
                <SidebarGroupLabel className="px-2 py-1.5 text-sm font-medium" asChild={false}>More</SidebarGroupLabel>
                <SidebarGroupContent className="space-y-1">
                  <SidebarMenu className="space-y-1">
                    {secondaryNavItems.map((item) => (
                      <SidebarMenuItem key={item.title} className="px-0 py-0">
                        <SidebarMenuButton 
                          tooltip={item.title}
                          onClick={() => handleNavigation(item.url)}
                          className="w-full flex justify-between items-center px-2 py-1.5 rounded-md hover:bg-accent"
                          variant="default"
                          size="default"
                        >
                          <item.icon className="size-4" />
                          <span>{item.title}</span>
                        </SidebarMenuButton>
                      </SidebarMenuItem>
                    ))}
                  </SidebarMenu>
                </SidebarGroupContent>
              </SidebarGroup>
            </SidebarContent>

            {/* Sidebar Footer */}
            <SidebarFooter className="border-t p-2">
              <SidebarMenu className="space-y-1">
                <SidebarMenuItem className="px-0 py-0">
                  <SidebarMenuButton 
                    tooltip="Profile"
                    onClick={() => handleNavigation('/profile')}
                    className="w-full flex justify-between items-center px-2 py-1.5 rounded-md hover:bg-accent"
                    variant="default"
                    size="default"
                  >
                    <User className="size-4" />
                    <span>Profile</span>
                  </SidebarMenuButton>
                </SidebarMenuItem>
                <SidebarMenuItem className="px-0 py-0">
                  <SidebarMenuButton 
                    tooltip="Notifications"
                    onClick={() => handleNavigation('/notifications')}
                    className="w-full flex justify-between items-center px-2 py-1.5 rounded-md hover:bg-accent"
                    variant="default"
                    size="default"
                  >
                    <Bell className="size-4" />
                    <span>Notifications</span>
                    <SidebarMenuBadge className="ml-auto bg-primary text-primary-foreground text-xs px-1.5 py-0.5 rounded-full">5</SidebarMenuBadge>
                  </SidebarMenuButton>
                </SidebarMenuItem>
                <SidebarMenuItem className="px-0 py-0">
                  <SidebarMenuButton 
                    tooltip="Logout"
                    onClick={handleLogout}
                    className="w-full flex justify-between items-center px-2 py-1.5 rounded-md hover:bg-accent"
                    variant="default"
                    size="default"
                  >
                    <LogOut className="size-4" />
                    <span>Logout</span>
                  </SidebarMenuButton>
                </SidebarMenuItem>
              </SidebarMenu>
            </SidebarFooter>
          </Sidebar>

          {/* Main Content */}
          <SidebarInset className="bg-background flex-1 p-6">
            <header className="flex justify-between items-center mb-8">
              <div>
                <SidebarTrigger 
                  className="mr-4 p-2 rounded-md hover:bg-accent"
                  onClick={handleSidebarToggle} 
                />
                <h1 className="text-2xl font-bold">Dashboard</h1>
              </div>
              <div className="flex items-center gap-2">
                <span className="text-sm text-muted-foreground">
                  {session?.user?.email || 'Welcome back!'}
                </span>
              </div>
            </header>
            
            <main className="space-y-6">
              
            </main>
          </SidebarInset>
        </div>
      </SidebarProvider>
    </div>